<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.PmphDepartmentDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id !=null ">
				id,
			</if>
			<if test="parentId != null and parentId !=''">
				parent_id,
			</if>
			<if test="path != null and path !=''">
				path,
			</if>
			<if test="dpName != null and dpName !=''">
				dp_name,
			</if>
			<if test="sort != null and sort !=''">
				sort,
			</if>
			<if test="note != null and note !=''">
				note,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id !=null ">
				#{id},
			</if>
			<if test="parentId !=null and parentId !=''">
				#{parentId},
			</if>
			<if test="path !=null and path !=''">
				#{path},
			</if>
			<if test="dpName !=null and dpName !=''">
				#{dpName},
			</if>
			<if test="sort !=null and sort !=''">
				#{sort},
			</if>
			<if test="note !=null and note !=''">
				#{note},
			</if>
		</trim>
	</sql>

	<!-- 新增 PmphDepartmentDao -->
	<insert id="addPmphDepartment" parameterType="PmphDepartment">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into pmph_department (
		<include refid="key" />
		)
		values(
		<include refid="value" />
		) ;
	</insert>

	<!-- 根据id删除一个 -->
	<delete id="deletePmphDepartmentById" parameterType="java.lang.Long">
		delete from
		pmph_department where id=#{id} ;
	</delete>

	<!-- 更新PmphDepartment -->
	<update id="updatePmphDepartment" parameterType="PmphDepartment">
		update
		pmph_department
		<set>
			<if test="parentId != null and parentId !=''">
				parent_id = #{parentId},
			</if>
			<if test="path != null and path !='' ">
				path = #{path},
			</if>
			<if test=" dpName != null and dpName !=''">
				dp_name= #{dpName},
			</if>
			<if test=" sort != null and sort !=''">
				sort= #{sort},
			</if>
			<if test=" note != null and note !=''">
				note = #{note},
			</if>
		</set>
		where id=#{id} ;
	</update>

	<!-- 根据id查询一个PmphDepartment -->
	<select id="getPmphDepartmentById" parameterType="java.lang.Long"
		resultType="PmphDepartment">
		select * from pmph_department where
		id=#{id} ;
	</select>

	<!-- 查询表单的数据总数 -->
	<select id="getPmphDepartmentCount" resultType="Long">
		select
		count(*)
		from
		pmph_department
	</select>

	<!-- 根据父级id获取社内机构下级所有部门 -->
	<select id="listPmphDepartment" parameterType="java.lang.Long"
		resultType="PmphUserDepartmentVO">
		SELECT
		p.*,
		IF (
		sum(IF(d.id IS NOT NULL, 1, 0)) > 0,
		FALSE,
		TRUE
		) isLeaf
		FROM
		pmph_department p
		LEFT JOIN pmph_department d ON
		d.parent_id = p.id
		WHERE
		p.parent_id = #{parentId}
		GROUP BY
		p.id
		ORDER BY
		p.sort
	</select>

	<!-- 根据部门名称模糊查询部门 -->
	<select id="listPmphDepartmentByDpName" parameterType="java.lang.String"
		resultType="PmphUserDepartmentVO">
		select id,dp_name from pmph_department where dp_name like
		#{dpName};
	</select>

	<!-- 批量删除 -->
	<delete id="deletePmphDepartmentBatch">
		delete from pmph_department where true and id in
		<foreach item="id" collection="list" open="(" separator=","
			close=")">
			#{id}
		</foreach>
	</delete>
	<!-- 根据父级id 和 名称查询 -->
	<select id="getPmphDepartmentByDpNameAndParentId" parameterType="PmphDepartment"
		resultType="PmphUserDepartmentVO">
		select * from pmph_department where dp_name =
		#{dpName} and
		parent_id = #{parentId};
	</select>

	<!-- 根据主键id查询 -->
	<select id="getDepartmentId" parameterType="java.lang.Long"
		resultType="PmphUserDepartmentVO">
		select * from pmph_department where id = #{id}
	</select>
	
	<!-- 根据主键id查询 -->
	<select id="getPmphDepartmentByName"  resultType="PmphDepartment">
		select * from pmph_department where dp_name = #{name}
	</select>

	<!-- 根据主键id查询 -->
	<select id="listOpts" resultType="DepartmentOptsVO">
		SELECT
		d.id,
		d.dp_name,
		t.realname
		FROM
		pmph_department d
		LEFT JOIN (
		SELECT
		u.department_id,
		u.realname
		FROM
		pmph_user u
		WHERE
		u.is_director
		GROUP BY
		u.department_id
		) t ON t.department_id = d.id
		WHERE 1=1
		<if test="dpName != null and dpName !=''">
			AND d.dp_name like concat('%',#{dpName},'%')
		</if>
		GROUP BY d.id
		LIMIT
		#{start},#{pageSize};
	</select>

	<!-- 根据主键id查询 -->
	<select id="listOptsTotal" resultType="Integer">
		SELECT count(*) FROM (SELECT
		d.id,
		d.dp_name,
		c.realname
		FROM
		pmph_department d
		LEFT JOIN (
		SELECT
		u.department_id,
		u.realname
		FROM
		pmph_user u
		WHERE
		u.is_director
		GROUP BY
		u.department_id
		) c ON
		c.department_id = d.id
		WHERE 1=1
		<if test="dpName != null and dpName !=''">
			AND d.dp_name like concat('%',#{dpName},'%')
		</if>
		GROUP BY d.id) t
	</select>
	<!-- 查询所有部门 -->
	<select id="getDepartmentIdList"	resultType="PmphDepartment">
		select * from  pmph_department
	</select>
</mapper>
