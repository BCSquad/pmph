<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.PmphGroupMemberDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="groupId != null">
				group_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="isWriter != null">
				is_writer,
			</if>
			<if test="isFounder != null">
				is_founder,
			</if>
			<if test="isAdmin != null">
				is_admin,
			</if>
			<if test="displayName != null and displayName !=''">
				display_name,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="groupId != null">
				#{groupId},
			</if>
			<if test="userId != null">
				#{userId},
			</if>
			<if test="isWriter != null">
				#{isWriter},
			</if>
			<if test="isFounder != null">
				#{isFounder},
			</if>
			<if test="isAdmin != null">
				#{isAdmin},
			</if>
			<if test="displayName != null and displayName !=''">
				#{displayName},
			</if>
		</trim>
	</sql>

	<!-- 新增 PmphGroupMember -->
	<insert id="addPmphGroupMember" parameterType="PmphGroupMember">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into pmph_group_member
		(
		<include refid="key" />
		)
		values(
		<include refid="value" />
		) ;
	</insert>

	<!-- 根据id删除一个 PmphGroupMember -->
	<delete id="deletePmphGroupMemberById" parameterType="java.lang.Long">
		delete from
		pmph_group_member where id=#{id} ;
	</delete>

	<!-- 更新 PmphGroupMember -->
	<update id="updatePmphGroupMember" parameterType="PmphGroupMember">
		update
		pmph_group_member
		<set>
			<if test="groupId != null and groupId !=''">
				group_id = #{groupId},
			</if>
			<if test="userId != null and userId !='' ">
				user_id = #{userId},
			</if>
			<if test=" isWriter != null">
				is_writer= #{isWriter},
			</if>
			<if test="isFounder != null ">
				is_founder = #{isFounder},
			</if>
			<if test="isAdmin != null ">
				is_admin = #{isAdmin},
			</if>
			<if test=" displayName != null and displayName !=''">
				display_name= #{displayName},
			</if>
		</set>
		where id=#{id} ;
	</update>

	<!-- 根据id查询一个 PmphGroupMember -->
	<select id="getPmphGroupMemberById" parameterType="java.lang.Long"
		resultType="PmphGroupMember">
		select * from pmph_group_member where
		id=#{id} ;
	</select>

	<!-- 根据组员id查询PmphGroupMember -->
	<select id="getPmphGroupMemberByMemberId" resultType="PmphGroupMemberVO">
		select *
		from pmph_group_member where
		group_id=#{arg0} and
		user_id= #{arg1}
		and
		is_writer = #{arg2}
		;
	</select>

	<!-- 根据组员id查询PmphGroupMember -->
	<select id="getPmphGroupMemberByMemberIdAndIsWriter"
		parameterType="java.lang.Long" resultType="PmphGroupMemberVO">
		select * from
		pmph_group_member where
		user_id=#{userId} and is_writer = false
		;
	</select>

	<!-- 解散小组时删除小组所有成员 -->
	<delete id="deletePmphGroupMemberOnGroup" parameterType="java.lang.Long">
		delete
		from
		pmph_group_member where group_id=#{groupId} ;
	</delete>

	<!-- 根据小组id查询小组所有成员 -->
	<select id="listPmphGroupMember" parameterType="java.lang.Long"
		resultType="PmphGroupMemberVO">
		select * from pmph_group_member where
		group_id=#{groupId}
		order by is_founder DESC ,is_admin DESC;
	</select>

	<!-- 查询表单的数据总数 -->
	<select id="getPmphGroupMemberCount" resultType="Long">
		select
		count(*)
		from
		pmph_group_member
	</select>

	<!-- 根据小组id查询到的数据总数 -->
	<select id="groupMemberTotal" parameterType="pageParameter"
		resultType="java.lang.Integer">
		SELECT count(*)
		FROM
		pmph_group_member a LEFT
		JOIN pmph_group b ON
		a.group_id = b.id
		LEFT
		JOIN
		(SELECT a.* FROM pmph_user a)c ON c.id =
		a.user_id LEFT JOIN
		pmph_department d
		ON c.department_id = d.id LEFT
		JOIN (SELECT a.* FROM
		writer_user a)e
		ON a.user_id = e.id LEFT JOIN org
		f ON f.id =
		e.org_id
		LEFT JOIN
		declaration g
		ON g.user_id = e.id LEFT JOIN
		dec_position h ON
		g.id =
		h.declaration_id
		WHERE a.group_id =
		#{parameter.groupId}
		<if test="parameter.name !=null and parameter.name !=''">
			and (e.username like concat('%',#{parameter.name},'%') or
			c.username like
			#{parameter.name} or a.display_name LIKE
			concat('%',#{parameter.name},'%'))
		</if>
		order by is_founder DESC ,is_admin DESC
	</select>

	<!-- 根据小组id查询到的小组成员详细信息 -->
	<select id="listGroupMemberManagerVOs" parameterType="pageParameter"
		resultType="PmphGroupMemberManagerVO">
		SELECT a.id,a.group_id,a.is_writer,b.book_id,a.user_id,a.display_name,
		CASE WHEN
		a.is_writer =1 THEN e.username WHEN a.is_writer = 0 THEN
		c.username END
		username,
		CASE WHEN a.is_founder =1 THEN '创建者' WHEN
		a.is_admin =1 THEN
		'管理员' ELSE
		'成员' END identity,
		CASE WHEN a.is_writer =1
		THEN (CASE WHEN
		h.chosen_position=1 THEN '主编'
		WHEN h.chosen_position=2
		THEN '副主编' WHEN
		h.chosen_position=3 THEN '编委'
		WHEN h.chosen_position=0
		THEN '无' END )
		WHEN a.is_writer =0 THEN
		'项目策划编辑' END position,
		CASE WHEN
		a.is_writer =1
		THEN e.org_id WHEN
		a.is_writer = 0 THEN c.department_id
		END workid,
		CASE WHEN a.is_writer
		=1 THEN f.org_name WHEN a.is_writer =
		0 THEN
		d.dp_name END workname,
		CASE WHEN a.is_writer =1 THEN e.handphone
		WHEN
		a.is_writer = 0 THEN
		c.handphone END handphone,
		CASE WHEN
		a.is_writer =1
		THEN e.email WHEN
		a.is_writer =0 THEN c.email END email
		FROM
		pmph_group_member a LEFT
		JOIN pmph_group b ON a.group_id = b.id
		LEFT
		JOIN
		(SELECT a.* FROM pmph_user a)c ON c.id = a.user_id LEFT JOIN
		pmph_department d
		ON c.department_id = d.id LEFT JOIN (SELECT a.* FROM
		writer_user a)e
		ON a.user_id = e.id LEFT JOIN org f ON f.id =
		e.org_id
		LEFT JOIN
		declaration g
		ON g.user_id = e.id LEFT JOIN
		dec_position h ON
		g.id =
		h.declaration_id
		WHERE a.group_id =
		#{parameter.groupId} and a.is_deleted = false
		<if test="parameter.name !=null and parameter.name !=''">
			and (e.username like concat('%',#{parameter.name},'%') or
			c.username like
			#{parameter.name} or a.display_name LIKE
			concat('%',#{parameter.name},'%'))
		</if>
		order by a.is_founder DESC , a.is_admin DESC 
		<if test="start !=null and pageNumber != null">
			limit #{start},#{pageSize}
		</if>
	</select>
	
	<!-- 更新 PmphGroupMember -->
	<update id="updateGroupMemberById" parameterType="Long">
		update
		pmph_group_member set is_deleted = true where id = #{id}
	</update>
	
</mapper>
