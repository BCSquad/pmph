<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.WriterUserDao">
	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="username!=null and username !=''">
				username,
			</if>
			<if test="password!=null and password !=''">
				password,
			</if>
			<if test="isDisabled!=null">
				is_disabled,
			</if>
			<if test="orgId!=null and orgId !=''">
				org_id,
			</if>
			<if test="nickname!=null and nickname !=''">
				nickname,
			</if>
			<if test="realname!=null and realname !=''">
				realname,
			</if>
			<if test="sex!=null and sex !=''">
				sex,
			</if>
			<if test="birthday!=null and birthday !=''">
				birthday,
			</if>
			<if test="experience!=null and experience !=''">
				experience,
			</if>
			<if test="position!=null and position !=''">
				position,
			</if>
			<if test="title!=null and title !=''">
				title,
			</if>
			<if test="fax!=null and fax !=''">
				fax,
			</if>
			<if test="handphone!=null and handphone !=''">
				handphone,
			</if>
			<if test="telephone!=null and telephone !=''">
				telephone,
			</if>
			<if test="idcard!=null and idcard !=''">
				idcard,
			</if>
			<if test="email!=null and email !=''">
				email,
			</if>
			<if test="address!=null and address !=''">
				address,
			</if>
			<if test="postcode!=null and postcode !=''">
				postcode,
			</if>
			<if test="rank!=null and rank !=''">
				rank,
			</if>
			<if test="isTeacher!=null">
				is_teacher,
			</if>
			<if test="cert!=null and cert !=''">
				cert,
			</if>
			<if test="authTime!=null and authTime !=''">
				auth_time,
			</if>
			<if test="authUserType!=null and authUserType !=''">
				auth_user_type,
			</if>
			<if test="authUserId!=null and authUserId !=''">
				auth_user_id,
			</if>
			<if test="isWriter!=null">
				is_writer,
			</if>
			<if test="isExpert!=null">
				is_expert,
			</if>
			<if test="avatar!=null and avatar !=''">
				avatar,
			</if>
			<if test="note!=null and note !=''">
				note,
			</if>
			<if test="sort!=null and sort !=''">
				sort,
			</if>
			<if test="isDeleted!=null">
				is_deleted,
			</if>
			<if test="gmtCreate!=null">
				gmt_create,
			</if>
			<if test="gmtUpdate!=null">
				gmt_update,
			</if>
		</trim>
	</sql>
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="username!=null and username !=''">
				#{username},
			</if>
			<if test="password!=null and password !=''">
				#{password},
			</if>
			<if test="isDisabled!=null">
				#{isDisabled},
			</if>
			<if test="orgId!=null and orgId !=''">
				#{orgId},
			</if>
			<if test="nickname!=null and nickname !=''">
				#{nickname},
			</if>
			<if test="realname!=null and realname !=''">
				#{realname},
			</if>
			<if test="sex!=null and sex !=''">
				#{sex},
			</if>
			<if test="birthday!=null and birthday !=''">
				#{birthday},
			</if>
			<if test="experience!=null and experience !=''">
				#{experience},
			</if>
			<if test="position!=null and position !=''">
				#{position},
			</if>
			<if test="title!=null and title !=''">
				#{title},
			</if>
			<if test="fax!=null and fax !=''">
				#{fax},
			</if>
			<if test="handphone!=null and handphone !=''">
				#{handphone},
			</if>
			<if test="telephone!=null and telephone !=''">
				#{telephone},
			</if>
			<if test="idcard!=null and idcard !=''">
				#{idcard},
			</if>
			<if test="email!=null and email !=''">
				#{email},
			</if>
			<if test="address!=null and address !=''">
				#{address},
			</if>
			<if test="postcode!=null and postcode !=''">
				#{postcode},
			</if>
			<if test="rank!=null and rank !=''">
				#{rank},
			</if>
			<if test="isTeacher!=null">
				#{isTeacher},
			</if>
			<if test="cert!=null and cert !=''">
				#{cert},
			</if>
			<if test="authTime!=null and authTime !=''">
				#{authTime},
			</if>
			<if test="authUserType!=null and authUserType !=''">
				#{authUserType},
			</if>
			<if test="authUserId!=null and authUserId !=''">
				#{authUserId},
			</if>
			<if test="isWriter!=null">
				#{isWriter},
			</if>
			<if test="isExpert!=null">
				#{isExpert},
			</if>
			<if test="avatar!=null and avatar !=''">
				#{avatar},
			</if>
			<if test="note!=null and note !=''">
				#{note},
			</if>
			<if test="sort!=null and sort !=''">
				#{sort},
			</if>
			<if test="isDeleted!=null">
				#{isDeleted},
			</if>
			<if test="gmtCreate!=null">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate!=null">
				#{gmtUpdate}
			</if>
		</trim>
	</sql>
	<insert id="add" parameterType="WriterUser" useGeneratedKeys="true"
		keyProperty="id">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO writer_user
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>

	<!-- 动态更新对象的写法 -->
	<update id="update" parameterType="WriterUser">
		UPDATE writer_user
		<set>
			<if test="username != null and username!=''">
				username = #{username},
			</if>
			<if test="password != null and password!='' ">
				`password` = #{password},
			</if>
			<if test=" isDisabled!= null ">
				is_disabled= #{isDisabled},
			</if>
			<if test="orgId != null and  orgId!=''">
				org_id = #{orgId},
			</if>
			<if test=" nickname!= null and nickname !=''">
				nickname= #{nickname},
			</if>
			<if test=" realname!= null and realname !=''">
				realname= #{realname},
			</if>
			<if test=" sex!= null and  sex!=''">
				sex= #{sex},
			</if>
			<if test=" birthday!= null and birthday !=''">
				birthday= #{birthday},
			</if>
			<if test=" experience!= null and  experience!=''">
				experience = #{experience},
			</if>
			<if test=" position!= null and  position!=''">
				position= #{position},
			</if>
			<if test=" title!= null and title !=''">
				title= #{title},
			</if>
			<if test=" fax!= null and  fax!=''">
				fax= #{fax},
			</if>
			<if test=" handphone!= null and handphone !=''">
				handphone = #{handphone},
			</if>
			<if test=" telephone!= null and  telephone!=''">
				telephone = #{telephone},
			</if>
			<if test=" idcard!= null and idcard !=''">
				idcard= #{idcard},
			</if>
			<if test=" email!= null and email !=''">
				email= #{email},
			</if>
			<if test=" address!= null and  address!=''">
				address= #{address},
			</if>
			<if test=" postcode!= null and  postcode!=''">
				postcode = #{postcode},
			</if>
			<if test=" rank!= null and  rank!=''">
				rank = #{rank},
			</if>
			<if test=" isTeacher!= null ">
				is_teacher= #{isTeacher},
			</if>
			<if test=" cert!= null and  cert!=''">
				cert = #{cert},
			</if>
			<if test=" authTime!= null and  authTime!=''">
				auth_time = #{authTime},
			</if>
			<if test=" authUserType!= null and  authUserType!=''">
				auth_user_type= #{authUserType},
			</if>
			<if test=" authUserId!= null and  authUserId!=''">
				auth_user_id= #{authUserId},
			</if>
			<if test=" isWriter!= null ">
				is_writer= #{isWriter},
			</if>
			<if test=" isExpert!= null ">
				is_expert = #{isExpert},
			</if>
			<if test=" avatar!= null and  avatar!=''">
				avatar= #{avatar},
			</if>
			<if test=" note!= null and  note!=''">
				note = #{note},
			</if>
			<if test=" sort!= null and  sort!=''">
				sort = #{sort},
			</if>
			<if test=" isDeleted!= null">
				is_deleted= #{isDeleted},
			</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<delete id="delete" parameterType="Long">
		DELETE FROM writer_user
		where
		id = #{id}
	</delete>

	<!-- 批量删除 -->
	<delete id="deleteBatch" parameterType="list">
		DELETE FROM writer_user
		where id in
		<foreach collection="ids" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
	</delete>

	<select id="get" parameterType="Long" resultType="WriterUser">
		SELECT
		*
		FROM
		writer_user
		WHERE
		id = #{id}
	</select>

	<select id="getListUser" resultType="WriterUser">
		SELECT
		*
		FROM
		writer_user
	</select>

	<select id="getByUserName" parameterType="String" resultType="WriterUser">
		SELECT
		*
		FROM
		writer_user
		WHERE
		username = #{username}
	</select>

	<select id="getListByRole" parameterType="Long" resultType="WriterUser">
		SELECT
		tu.id,
		tu.username,
		tu.`password`,
		tu.is_disabled,
		tu.`org_id`,
		tu.`realname`
		FROM
		writer_user tu
		LEFT JOIN writer_user_role tur ON tu.id
		= tur.user_id
		LEFT JOIN writer_role tr ON tur.role_id = tr.id
		WHERE
		tr.id =#{rid}
	</select>

	<!-- 根据用户 id 查询这个用户拥有的所有资源（这里的资源就代表权限） -->
	<select id="getListAllResources" resultType="WriterPermission"
		parameterType="Long">
		SELECT
		tr.`id`,
		tr.`parent_id`,
		tr.`path`,
		tr.`permission_name`,
		tr.menu_name,
		tr.url
		FROM `writer_permission` tr
		LEFT JOIN `writer_role_permission` trr ON tr.`id` =
		trr.`permission_id`
		LEFT JOIN `writer_user_role` tur ON trr.`role_id` =
		tur.role_id
		WHERE tur.user_id = #{uid}
	</select>

	<!-- 根据用户 id 查询用户所具有的角色字符串表示 -->
	<select id="getListRoleSnByUser" parameterType="Long"
		resultType="String">
		SELECT
		tr.role_name
		FROM `writer_role` tr
		LEFT JOIN
		`writer_user_role` tur ON tr.`id` = tur.role_id
		LEFT JOIN `writer_user`
		tu ON tur.`user_id` = tu.id
		WHERE tu.`id` = #{uid}
	</select>

	<!-- 根据用户 id 查询用户所具有的角色对象表示 -->
	<select id="getListUserRole" parameterType="Long" resultType="WriterRole">
		SELECT
		tr.`id`,
		tr.`role_name`
		FROM `writer_role` tr
		LEFT JOIN
		`writer_user_role` tur ON tr.`id` = tur.role_id
		LEFT JOIN `writer_user`
		tu ON tur.`user_id` = tu.id
		WHERE tu.`id` = #{uid}
	</select>

	<!-- 删除作家用户 -->
	<delete id="deleteWriterUserById" parameterType="String">
		delete from
		writer_user where id in
		<foreach collection="array" open="(" separator="," close=")"
			item="id">#{id}
		</foreach>
	</delete>
	<!-- 修改作家用户信息 -->
	<update id="updateWriterUserById" parameterType="WriterUser">
		update
		writer_user set
		username=#{username},password=#{password},org_id=#{orgId},realname=#{realname},sex=#{sex},birthday=#{birthday},experience=#{experience},position=#{position},title=#{title},fax=#{fax},handphone=#{handphone},telephone=#{telephone},idcard=#{idcard},email=#{email},address=#{address},postcode=#{postcode},rank=#{rank},cert=#{cert},avatar=#{avatar},note=#{note}
		where id=#{id};
	</update>
	<!-- 根据用户名查询作家用户 -->
	<select id="getWriterUserByUsername" parameterType="String"
		resultType="WriterUser">
		select * from
		writer_user where username=#{username};
	</select>
	<!-- 分页查询 -->
	<select id="getListWriterUserTotal" parameterType="Page"
		resultType="java.lang.Integer">
		select count(*) from writer_user w left join org o on o.id = w.org_id
		where 1=1
		<if test="parameter.username !=null and parameter.username !='' ">
			and w.username like #{parameter.username}
		</if>
		<if test="parameter.realname !=null and parameter.realname !=''">
			and w.realname like #{parameter.realname}
		</if>
		<if test="parameter.orgName !=null and parameter.orgName !=''">
			and o.org_name like #{parameter.orgName}
		</if>
		<if test="parameter.rank !=null">
			and w.rank = #{parameter.rank}
		</if>
	</select>
	<select id="getListWriterUser" parameterType="Page"
		resultType="WriterUserManagerVO">
		select
		*
		from writer_user w left join org o on o.id = w.org_id where
		1=1
		<if test="parameter.name !=null and parameter.name !='' ">
			and (w.username like #{parameter.name} or w.realname like
			#{parameter.name})
		</if>
		<if test="parameter.orgName !=null and parameter.orgName !=''">
			and o.org_name like #{parameter.orgName}
		</if>
		<if test="parameter.rank !=null">
			and w.rank = #{parameter.rank}
		</if>
		<if test="start !=null and pageNumber != null">
			limit #{start},#{pageSize}
		</if>
	</select>
	<!-- 后台作家用户管理页面添加用户 -->
	<insert id="addWriterUserOfBack" parameterType="WriterUser">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		INSERT INTO writer_user
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>

	<!-- 根据机构id集查询用户 -->
	<select id="getWriterUserListByOrgIds" resultType="WriterUser">
		select * from writer_user where org_id in
		<foreach item="orgId" collection="list" open="(" separator=","
			close=")">
			#{orgId}
		</foreach>
	</select>

	<!-- 查询表单的数据总条数 -->
	<select id="getWriterUserCount" resultType="java.lang.Long">
		select
		count(*) from
		writer_user ;
	</select>
	<!-- <select id="getListTotal" parameterType="Page" resultType="java.lang.Integer"> 
		select count(*) from writer_user w where 1=1 <if test="parameter.username 
		!=null "> and w.username like #{parameter.username} </if> <if test="parameter.realname 
		!=null"> and w.realname like #{parameter.realname} </if> <if test="parameter.orgId 
		!=null"> and w.org_id in (#{parameter.orgId}) </if> </select> <select id="getList" 
		parameterType="Page" resultType="WriterUser"> select w.id,w.username,w.is_disabled,w.address,w.realname,w.position,w.title,w.handphone,w.email,w.org_id,w.rank 
		from writer_user w where 1=1 <if test="parameter.username !=null "> and w.username 
		like #{parameter.username} </if> <if test="parameter.realname !=null"> and 
		w.realname like #{parameter.realname} </if> <if test="parameter.orgId !=null"> 
		and w.org_id in (#{parameter.orgId}) </if> <if test="start !=null and pageNumber 
		!= null"> limit #{start},#{pageSize} </if> </select> -->
</mapper>
