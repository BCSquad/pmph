<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.UserMessageDao">



	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="msgId != null and msgId !=''">
				msg_id,
			</if>
			<if test="msgType != null">
				msg_type,
			</if>
			<if test="title != null and title !='' ">
				title,
			</if>
			<if test="senderId != null ">
				sender_id,
			</if>
			<if test="senderType != null ">
				sender_type,
			</if>
			<if test="receiverId != null ">
				receiver_id,
			</if>
			<if test="receiverType != null ">
				receiver_type,
			</if>
			<if test="isRead != null ">
				is_read,
			</if>
			<if test="isWithdraw != null ">
				is_withdraw,
			</if>
			<if test="isDeleted != null ">
				is_deleted,
			</if>
			<if test="gmtCreate != null ">
				gmt_create,
			</if>
			<if test="gmtUpdate != null ">
				gmt_update,
			</if>
			<if test="materialId != null ">
				material_id,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="msgId != null and msgId !=''">
				#{msgId},
			</if>
			<if test="msgType != null">
				#{msgType},
			</if>
			<if test="title != null and title !='' ">
				#{title},
			</if>
			<if test="senderId != null ">
				#{senderId},
			</if>
			<if test="senderType != null ">
				#{senderType},
			</if>
			<if test="receiverId != null ">
				#{receiverId},
			</if>
			<if test="receiverType != null ">
				#{receiverType},
			</if>
			<if test="isRead != null ">
				#{isRead},
			</if>
			<if test="isWithdraw != null ">
				#{isWithdraw},
			</if>
			<if test="isDeleted != null ">
				#{isDeleted},
			</if>
			<if test="gmtCreate != null ">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate != null ">
				#{gmtUpdate},
			</if>
			<if test="materialId != null ">
				#{materialId},
			</if>
		</trim>
	</sql>
	<!--单条插入 UserMessage -->
	<insert id="addUserMessage" parameterType="UserMessage">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		user_message(
		<include refid="key" />
		)
		values (
		<include refid="value" />
		)

	</insert>

	<!-- 通过id 查询UserMessage -->
	<select id="getUserMessageById" parameterType="map" resultType="UserMessage">
		select * from user_message where id = #{id};
	</select>

	<!-- 通过MsgId 动态更新UserMessage -->
	<update id="updateUserMessageTitleByMsgId" parameterType="UserMessage">
		update
		user_message
		<set>
			<if test="title != null and title != ''">
				title = #{title},
			</if>
		</set>
		where
		msg_id = #{msgId};
	</update>

	<!-- 通过id 动态更新UserMessage -->
	<update id="updateUserMessage" parameterType="UserMessage">
		update user_message
		<set>
			<if test="msgId != null">
				msg_id = #{msgId},
			</if>
			<if test="msgType != null">
				msg_type = #{msgType},
			</if>
			<if test="title != null and title != '' ">
				title = #{title},
			</if>
			<if test="senderId != null">
				sender_id = #{senderId},
			</if>
			<if test="senderType != null">
				sender_type =#{senderType},
			</if>
			<if test="receiverId != null">
				receiver_id =#{receiverId},
			</if>
			<if test="receiverType != null">
				receiver_type = #{receiverType},
			</if>
			<if test="isRead != null">
				is_read =#{isRead},
			</if>
			<if test="isWithdraw != null">
				is_withdraw = #{isWithdraw},
			</if>
			<if test="isDeleted != null">
				is_deleted =#{isDeleted},
			</if>
			<if test="gmtCreate != null">
				gmt_create = #{gmtCreate},
			</if>
			<if test="gmtUpdate != null">
				gmt_update =#{gmtUpdate},
			</if>
			<if test="materialId != null ">
				material_id = #{materialId},
			</if>
		</set>
		where id = #{id} ;
	</update>

	<!-- 通过msgId 撤销UserMessage -->
	<update id="updateUserMessageWithdrawByMsgId" parameterType="java.lang.String">
		update
		user_message
		set
		is_withdraw = true
		where
		msg_id = #{msgId};
	</update>

	<!-- 通过msgId 取消撤销UserMessage -->
	<update id="updateUserMessageCancelWithdrawByMsgId"
		parameterType="java.lang.String">
		update
		user_message
		set
		is_withdraw = false
		where
		msg_id =
		#{msgId};
	</update>

	<!-- 通过msgId 更新是否被逻辑删除 -->
	<update id="updateUserMessageIsDeletedByMsgId" parameterType="java.util.List">
		update
		user_message
		set
		is_deleted = true
		where
		msg_id
		in
		<foreach collection="list" item="msgId" index="index" open="("
			close=")" separator=",">
			#{msgId}
		</foreach>
	</update>

	<!-- 根据消息id 获取 UserMessage集 -->
	<select id="getMessageByMsgId" parameterType="java.lang.String"
		resultType="UserMessage">
		select * from `user_message` t where t.`msg_id` = #{msgId} AND t.`is_read`=1;
	</select>

	<!-- 批量插入 UserMessage -->
	<insert id="addUserMessageBatch" parameterType="java.util.List">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into
		user_message(
		msg_id,msg_type,title,
		sender_id,sender_type,
		receiver_id,receiver_type,
		material_id
		)
		values
		<foreach collection="list" item="UserMessage" index="index"
			separator=",">
			( #{UserMessage.msgId},
			#{UserMessage.msgType},
			#{UserMessage.title},
			#{UserMessage.senderId},
			#{UserMessage.senderType},
			#{UserMessage.receiverId},
			#{UserMessage.receiverType},
			#{UserMessage.materialId}
			)
		</foreach>
	</insert>

	<!--MessageStateVO模糊查询获取列表 -->
	<select id="listMessageState" parameterType="PageParameter"
		resultType="MessageStateVO">
		SELECT
		a.id,a.msg_id,a.msg_type,a.gmt_create sendTime,a.gmt_update
		reciveTime,
		a.is_read,a.receiver_type,a.is_withdraw,t.count,
		case when
		a.receiver_type =1
		then
		b.realname when a.receiver_type =2
		then
		c.realname when a.receiver_type =3
		then
		d.realname end name,
		case when
		a.receiver_type =1
		then
		bd.dp_name when a.receiver_type =2
		then
		cd.org_name when a.receiver_type =3
		then
		dd.org_name end dptname,
		case
		when
		a.receiver_type =1
		then
		b.handphone
		when
		a.receiver_type =2
		then
		c.handphone
		when
		a.receiver_type =3
		then
		d.handphone
		end
		handphone
		from
		user_message a
		left join
		(select a.*,1 usertype from pmph_user a) b
		on
		b.id=a.receiver_id
		and
		b.usertype = a.receiver_type
		left join
		pmph_department bd
		on
		bd.id=b.department_id
		left join
		(select a.*,2
		usertype from writer_user a) c
		on
		c.id=a.receiver_id
		and
		c.usertype =
		a.receiver_type
		left join
		org cd
		on
		cd.id = c.org_id
		left join
		(select a.*,3
		usertype from org_user a) d
		on
		d.id=a.receiver_id
		and
		d.usertype =
		a.receiver_type
		left join
		org dd
		on
		dd.id = d.org_id,
		(SELECT
		count(*) count
		from
		user_message a
		left join
		(select a.*,1 usertype from pmph_user a) b
		on
		b.id=a.receiver_id
		and
		b.usertype = a.receiver_type
		left join
		pmph_department bd
		on
		bd.id=b.department_id
		left join
		(select a.*,2
		usertype from writer_user a) c
		on
		c.id=a.receiver_id
		and
		c.usertype =
		a.receiver_type
		left join
		org cd
		on
		cd.id = c.org_id
		left join
		(select a.*,3
		usertype from org_user a) d
		on
		d.id=a.receiver_id
		and
		d.usertype =
		a.receiver_type
		left join
		org dd
		on
		dd.id = d.org_id
		where
		is_withdraw =0
		<if test="parameter !=null ">
			<if test="parameter.isRead != null">
				and is_read = #{parameter.isRead}
			</if>
			<if test="parameter.senderId != null">
				and sender_id = #{parameter.senderId}
			</if>
			<if test="parameter.name !=null and parameter.name != '' ">
				and (bd.dp_name like concat('%',#{parameter.name},'%') or
				cd.org_name
				like concat('%',#{parameter.name},'%')
				or dd.org_name like
				concat('%',#{parameter.name},'%') or b.realname
				like
				concat('%',#{parameter.name},'%')
				or c.realname like
				concat('%',#{parameter.name},'%') or d.realname
				like
				concat('%',#{parameter.name},'%') )
			</if>
			<if test="parameter.msgId != null">
				and msg_id = #{parameter.msgId}
			</if>
			<if test="parameter.materialId != null">
				and material_id = #{parameter.materialId}
			</if>
		</if>
		) t
		where is_withdraw =0
		<if test="parameter !=null ">
			<if test="parameter.isRead != null">
				and is_read = #{parameter.isRead}
			</if>
			<if test="parameter.senderId != null">
				and sender_id = #{parameter.senderId}
			</if>
			<if test="parameter.name !=null and parameter.name != '' ">
				and (bd.dp_name like concat('%',#{parameter.name},'%') or
				cd.org_name like concat('%',#{parameter.name},'%')
				or dd.org_name
				like concat('%',#{parameter.name},'%') or b.realname
				like
				concat('%',#{parameter.name},'%')
				or c.realname like
				concat('%',#{parameter.name},'%') or d.realname
				like
				concat('%',#{parameter.name},'%') )
			</if>
			<if test="parameter.msgId != null">
				and msg_id = #{parameter.msgId}
			</if>
			<if test="parameter.materialId != null">
				and material_id = #{parameter.materialId}
			</if>
		</if>
		order by name
		<if test="start !=null and pageNumber != null">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="getMessageTotal" parameterType="PageParameter"
		resultType="Integer">
		SELECT
		COUNT(*)
		FROM(
		SELECT
		m.id,
		m.msg_id,
		m.title,
		m.sender_id,
		u.realname
		sendName,
		m.gmt_create sendTime
		FROM
		user_message m
		LEFT JOIN
		pmph_user u
		ON u.id = m.sender_id
		WHERE
		m.is_deleted = 0
		AND
		m.msg_type = 1
		<if test="parameter.senderIds != null">
			AND
			m.sender_id in
			<foreach collection="parameter.senderIds" item="userId"
				index="index" open="(" close=")" separator=",">
				#{userId}
			</foreach>
		</if>
		<if test="parameter.title != null and parameter.title != ''">
			and m.title like concat('%',#{parameter.title},'%')
		</if>
		GROUP BY
		m.msg_id,
		m.sender_id,
		m.title
		) t
	</select>
	<select id="listMessage" parameterType="PageParameter"
		resultType="UserMessageVO">
		SELECT
		m.id,
		m.msg_id,
		m.title,
		m.sender_id,
		m.is_withdraw,
		u.realname
		sendName,
		m.gmt_create sendTime
		FROM
		user_message m
		LEFT JOIN
		pmph_user u
		ON
		u.id = m.sender_id
		WHERE
		m.is_deleted = 0
		AND
		m.msg_type = 1
		<if test="parameter.senderIds != null">
			AND
			m.sender_id in
			<foreach collection="parameter.senderIds" item="userId"
				index="index" open="(" close=")" separator=",">
				#{userId}
			</foreach>
		</if>
		<if test="parameter.title != null and parameter.title != ''">
			and m.title like concat('%',#{parameter.title},'%')
		</if>
		GROUP BY
		m.msg_id,
		m.sender_id,
		m.title
		ORDER BY
		m.`gmt_create` DESC
		LIMIT
		#{start},#{pageSize}
	</select>

	<select id="listMyMessage" parameterType="PageParameter"
		resultType="MyMessageVO">
		SELECT
		*,
		m.gmt_create sendTime
		FROM
		user_message m
		WHERE
		m.receiver_id=#{parameter.userId}
		AND
		m.receiver_type =
		#{parameter.userType}
		AND
		m.is_deleted = false
		AND
		m.is_withdraw = false
		<if test="parameter.title != null and parameter.title != ''">
			and m.title like concat('%',#{parameter.title},'%')
		</if>
		<if test="parameter.isRead != null ">
			and m.is_read = #{parameter.isRead}
		</if>
		ORDER BY
		m.gmt_create DESC
		LIMIT
		#{start},#{pageSize}
	</select>

	<select id="listMyMessageTotal" parameterType="PageParameter"
		resultType="Integer">
		SELECT
		count(*)
		from
		(SELECT
		*,m.gmt_create sendTime
		FROM
		user_message m
		WHERE
		m.receiver_id=#{parameter.userId}
		AND
		m.receiver_type =
		#{parameter.userType}
		AND
		m.is_deleted = false
		AND
		m.is_withdraw = false
		<if test="parameter.title != null and parameter.title != ''">
			and m.title like concat('%',#{parameter.title},'%')
		</if>
		<if test="parameter.isRead != null ">
			and m.is_read = #{parameter.isRead}
		</if>
		ORDER BY
		m.gmt_create DESC
		) t
	</select>

	<select id="getMyMessageDetail" parameterType="PageParameter"
		resultType="MyMessageVO">
		SELECT
		*,
		m.gmt_create sendTime
		FROM
		user_message m
		WHERE
		m.id =
		#{id}
	</select>

	<!-- 通过id 更新是否被逻辑删除 -->
	<update id="updateMyMessage">
		update
		user_message
		set
		is_deleted = true
		where
		id
		in
		<foreach collection="array" item="id" index="index" open="("
			close=")" separator=",">
			#{id}
		</foreach>
		;
	</update>

	<!-- 通过id删除UserMessage -->
	<delete id="deleteMessageByMsgId" parameterType="java.util.List">
		delete from
		user_message
		where
		msg_id
		in
		<foreach collection="list" item="msgId" index="index" open="("
			close=")" separator=",">
			#{msgId}
		</foreach>
	</delete>
</mapper>