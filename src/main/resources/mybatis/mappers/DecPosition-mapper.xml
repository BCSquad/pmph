<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.DecPositionDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id !=null">
				id,
			</if>
			<if test="declarationId !=null and declarationId !=''">
				declaration_id,
			</if>
			<if test="textbookId !=null and textbookId !=''">
				textbook_id,
			</if>
			<if test="presetPosition !=null and presetPosition !=''">
				preset_position,
			</if>
			<if test="isDigitalEditor !=null ">
				is_digital_editor,
			</if>
			<if test="isOnList !=null and isOnList !=''">
				is_on_list,
			</if>
			<if test="chosenPosition !=null and chosenPosition !=''">
				chosen_position,
			</if>
			<if test="rank !=null and rank !=''">
				rank,
			</if>
			<if test="syllabusId !=null and syllabusId !=''">
				syllabus_id,
			</if>
			<if test="syllabusName !=null and syllabusName !=''">
				syllabus_name,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<trim suffixOverrides=",">
			<if test="id !=null">
				#{id},
			</if>
			<if test="declarationId !=null and declarationId !=''">
				#{declarationId},
			</if>
			<if test="textbookId !=null and textbookId !=''">
				#{textbookId},
			</if>
			<if test="isDigitalEditor !=null ">
				#{isDigitalEditor},
			</if>
			<if test="presetPosition !=null and presetPosition !=''">
				#{presetPosition},
			</if>
			<if test="isOnList !=null and isOnList !=''">
				#{isOnList},
			</if>
			<if test="chosenPosition !=null and chosenPosition !=''">
				#{chosenPosition},
			</if>
			<if test="rank !=null and rank !=''">
				#{rank},
			</if>
			<if test="syllabusId !=null and syllabusId !=''">
				#{syllabusId},
			</if>
			<if test="syllabusName !=null and syllabusName !=''">
				#{syllabusName},
			</if>
		</trim>
	</sql>

	<!-- 新增DecPosition -->
	<insert id="addDecPosition" parameterType="DecPosition">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into dec_position(
		<include refid="key" />
		)
		values(
		<include refid="value" />
		);
	</insert>

	<!-- 根据id删除一个作家申报职位信息 -->
	<delete id="deleteDecPosition" parameterType="java.lang.Long">
		delete from
		dec_position where
		id=#{id};
	</delete>

	<!-- 更新作家申报职位信息 -->
	<update id="updateDecPosition" parameterType="DecPosition">
		update dec_position
		<set>
			<if test="declarationId !=null and declarationId !=''">
				declaration_id = #{declarationId},
			</if>
			<if test="textbookId !=null and textbookId !=''">
				textbook_id = #{textbookId},
			</if>
			<if test="presetPosition !=null and presetPosition !=''">
				preset_position = #{presetPosition},
			</if>
			<if test="isDigitalEditor !=null ">
				is_digital_editor = #{isDigitalEditor},
			</if>
			<if test="isOnList !=null and isOnList !=''">
				is_on_list = #{isOnList},
			</if>
			<if test="chosenPosition !=null and chosenPosition !=''">
				chosen_position = #{chosenPosition},
			</if>
			<if test="rank !=null and rank !=''">
				rank = #{rank},
			</if>
			<if test="syllabusId !=null and syllabusId !=''">
				syllabus_id = #{syllabusId},
			</if>
			<if test="syllabusName !=null and syllabusName !=''">
				syllabus_name = #{syllabusName},
			</if>
		</set>
		where id=#{id} ;
	</update>

	<!-- 根据id查询一个作家申报职位信息 -->
	<select id="getDecPositionById" parameterType="java.lang.Long"
		resultType="DecPosition">
		select * from dec_position where id=#{id};
	</select>

	<!-- 根据declarationId查询作家申报职位信息 -->
	<select id="listDecPositions" parameterType="java.lang.Long"
		resultType="DecPosition">
		select * from dec_position where
		declaration_id=#{declarationId};
	</select>

	<!-- 根据书籍id查询申报职位列表 -->
	<select id="listDecPositionsByTextbookId" parameterType="java.lang.Long" resultType="DecPosition">
		select 
			DISTINCT a.* 
		from 
			dec_position a 
		left join 
			declaration b 
		on 
			b.id =a.declaration_id 
		LEFT JOIN 
			textbook c 
		on 
			c.id=a.textbook_id 
		where 
			b.id is not null  
			and b.is_staging =false 
			and b.online_progress != 2 
			and c.id = #{textbookId};
	</select>
	
	<!-- 根据书籍id获取入选的职位职位(主编、副主编、编委、数字编辑) -->
	<select id="listChosenDecPositionsByTextbookId" parameterType="java.lang.Long" resultType="DecPosition">
		select 
			DISTINCT a.* 
		from 
			dec_position a 
		left join 
			declaration b 
		on 
			b.id =a.declaration_id 
		LEFT JOIN 
			textbook c 
		on 
			c.id=a.textbook_id 
		where 
		    (a.chosen_position in (1,2,3) or a.is_digital_editor =1 )
		    and b.id is not null  
			and b.is_staging =false 
			and b.online_progress != 2 
			and c.id = #{textbookId};
	</select>
	
	<!-- 根据书籍id查询申报id -->
	<select id="listDecPositionsByTextbookIds" resultType="java.lang.Long">
		SELECT 
			d.user_id 
		FROM 
			declaration d 
		LEFT JOIN 
			dec_position p 
		ON 
			d.id = p.declaration_id 
		WHERE 
			p.textbook_id 
		in 
			<foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
            	#{item}
        	</foreach>
	</select>

	<!-- 查询作家申报职位表的总记录数 -->
	<select id="getDecPosition" resultType="java.lang.Long">
		select count(*) from
		dec_position
	</select>
	
	<!-- 根据orgid和bookid获取该机构某些已公布的书的申报职位 -->
	<select id="listDecPositionsByTextbookIdAndOrgid" parameterType="java.util.Map" resultType="DecPosition">
		select  DISTINCT a.* 
			from dec_position a 
			LEFT JOIN declaration b on b.id = a.declaration_id
			LEFT JOIN  textbook C ON C.ID=A.textbook_id 
      		WHERE B.ID IS NOT NULL and c.id is not null
	    	AND b.is_staging =false and b.online_progress != 2 
			AND A.chosen_position IN (1,2,3) AND  C.is_published = true 
			AND B.org_id = #{orgId} 
      		AND C.ID IN 
			<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
       			#{item}
   			</foreach>
    </select>
    
    <!-- 教材申报-遴选主编/遴选编委(列表) -->
    <select id="listEditorSelection" parameterType="java.util.Map" resultType="DecPositionEditorSelectionVO">
    	SELECT 
    		dp.`id`, dc.`realname`,dc.`sex`,
    		org.`org_name` reportName,dc.`org_name`,
    		dp.`preset_position`,dc.`online_progress`,
    		dc.`offline_progress`,dp.`chosen_position`,
    		dp.`rank`,dp.`is_digital_editor`
		FROM 
			`dec_position` dp 
		LEFT JOIN 
			`declaration` dc
		ON 
			dp.`declaration_id` = dc.`id`
		LEFT JOIN 
			`org` org 
		ON 
			dc.`org_id`= org.`id`
		WHERE
			dp.`textbook_id` = #{textbookId}
			<if test="realName !=null and realName !=''">
				AND
					dc.`realname` like concat('%',#{realName},'%')
			</if>
			<if test="presetPosition !=null">
				<!-- 主编 -->
				<if test="presetPosition =='1'">
					AND
						dp.`preset_position` IN(4,5,6,7)
				</if>
				<!-- 副主编 -->
				<if test="presetPosition =='2'">
					AND
						dp.`preset_position` IN(2,3,6,7)
				</if>
				<!-- 编委 -->
				<if test="presetPosition =='3'">
					AND
						dp.`preset_position` IN(1,3,5,7)
				</if>
			</if>
		ORDER BY 
			dp.`gmt_create` DESC
    </select>
    
    <!-- 教材申报-遴选主编/遴选编委(更新) -->
	<update id="updateDecPositionEditorSelection" parameterType="java.util.List">
		<foreach item="item" collection="list" index="index" open=""
			separator=";">
			update
				dec_position
			<set>
				<if test="item.chosenPosition !=null">
					chosen_position = #{item.chosenPosition},
				</if>
				<if test="item.rank !=null">
					rank = #{item.rank},
				</if>
				<if test="item.isDigitalEditor !=null">
					isDigitalEditor = #{item.isDigitalEditor},
				</if>
			</set>
			where
				id=#{item.id}
		</foreach>
	</update>
	
	<!-- 根据declarationId查询作家申报职位信息并显示图书名字 -->
	<select id="listDecPositionsOrBook" parameterType="java.lang.Long"
		resultType="DecPositionDisplayVO">
		select *,tb.textbook_name from dec_position dp 
		left join (select id,textbook_name from textbook) tb on (tb.id=dp.textbook_id)
		where
		declaration_id=#{declarationId};
	</select>
    
</mapper>
