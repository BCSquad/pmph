<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.MaterialTypeDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="parentId!=null">
				parent_id,
			</if>
			<if test="path!=null and path != '' ">
				path,
			</if>
			<if test="typeName!=null and typeName != ''  ">
				type_name,
			</if>
			<if test="sort!=null">
				sort,
			</if>
			<if test="note!=null  and note != ''   ">
				note,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="parentId!=null">
				#{parentId},
			</if>
			<if test="path!=null  and path != ''  ">
				#{path},
			</if>
			<if test="typeName!=null  and typeName != '' ">
				#{typeName},
			</if>
			<if test="sort!=null">
				#{sort},
			</if>
			<if test="note!=null  and note != '' ">
				#{note},
			</if>
		</trim>
	</sql>

	<!-- 新增MaterialType -->
	<insert id="addMaterialType" parameterType="MaterialType">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		<!-- sql片段对应字段名,id属性值任意 -->
		INSERT INTO material_type
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>


	<!-- 根据id删除一个 -->
	<delete id="deleteMaterialTypeById" parameterType="java.lang.Long">
		delete from
		material_type where
		id=#{id} ;
	</delete>

	<!-- 更新MaterialType -->
	<update id="updateMaterialType" parameterType="MaterialType">
		update material_type
		<set>
			<if test="parentId != null ">
				parent_id = #{parentId},
			</if>
			<if test="path != null and path !='' ">
				path = #{path},
			</if>
			<if test=" typeName != null and typeName !=''">
				type_name= #{typeName},
			</if>
			<if test=" sort != null">
				sort= #{sort},
			</if>
			<if test=" note != null">
				note = #{note},
			</if>
		</set>
		where
		id=#{id} ;
	</update>

	<!-- 根据id查询一个MaterialType -->
	<select id="getMaterialTypeById" parameterType="java.lang.Long"
		resultType="MaterialType">
		select * from material_type where id=#{id} ;
	</select>

	<!-- 查询表单的数据总数 -->
	<select id="getMaterialTypeCount" resultType="Long">
		select
		count(*)
		from
		material_type
	</select>

	<!-- 根据父级id获取所有书籍类别 -->
	<select id="listMaterialType" parameterType="java.lang.Long"
		resultType="MaterialTypeVO">
		select * from material_type where parent_id = #{parentId}
		order by sort;
	</select>


	<!--查询分类下的教材-->
	<select id="queryMaterialByMaterialTypeId" parameterType="Long" resultType="int">
		select count(id) from material
		where material_type = #{id}

	</select>

	<!--查询分类下的出版图书-->
	<select id="queryBookByMaterialTypeId" parameterType="Long" resultType="int">
		select count(id) from book
		where type = #{id}

	</select>

	<!--加载下一级分类-->
	<select id="lazyQueryListMaterialType" parameterType="Long" resultType="com.bc.pmpheep.back.vo.MaterialTypeVO">
		select
		m.*
		,if(count(cm.id)>0,FALSE ,TRUE ) isLeaf
		from material_type m
		left join material_type cm on cm.parent_id = m.id
		where m.parent_id = #{parentId}
		group by m.id
		order by m.sort
	</select>

	<!--根据id 加载当前分类-->
	<select id="getMaterialTypeVoById" parameterType="Long" resultType="com.bc.pmpheep.back.vo.MaterialTypeVO">
		select
		m.*
		,if(count(cm.id)>0,FALSE ,TRUE ) isLeaf
		from material_type m
		left join material_type cm on cm.parent_id = m.id
		where m.id = #{id}
		group by m.id
	</select>



</mapper>