<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.MaterialOrgDao">

	<!-- 新增一个MaterialOrg -->
	<insert id="addMaterialOrg" parameterType="MaterialOrg">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into material_org (material_id,org_id)  values(#{materialId},#{orgId}) ;
	</insert>
	
	<!--批量新增 materialOrg -->
	<insert id="addMaterialOrgs" parameterType="java.util.List">
		insert into material_org (material_id,org_id)  values
		<foreach collection="list" item="item" index="index" separator=",">
								(#{item.materialId},#{item.orgId}) 
		</foreach>
	</insert>
	
	<!-- 根据materialId查询MaterialOrg集合-->
	<select id="getListMaterialOrgByMaterialId" parameterType="java.lang.Long" resultType="java.lang.Long">
		select org_id from material_org where material_id=#{materialId} ;
	</select>
	
	<!-- 根据materialId导出已发布的学校-->
	<select id="getOutPutExclOrgByMaterialId" parameterType="java.lang.Long" resultType="OrgExclVO">
		SELECT 
			o.`org_name`,
		 	ou.`username`,
		 	m.`material_name`
		FROM
			`material` m
	 	LEFT JOIN 
	  		`material_org` mo 
	  	ON 
	  		m.`id`= mo.`material_id`
	  	LEFT JOIN 
	  		org o 
	    ON 
	    	mo.`org_id` = o.`id` 
	  	LEFT JOIN 
	  		`org_user` ou
	    ON 
	    	o.`id` = ou.`org_id` 
		WHERE 
			m.`is_published`=TRUE
		AND 
			material_id=#{materialId}
	</select>
	
	<!-- 根据materialId删除 -->
	<delete id="deleteMaterialOrgByMaterialId" parameterType="java.lang.Long">
		delete from material_org where material_id=#{materialId} ;
	</delete>
	
	<!-- 根据orgId删除 -->
	<delete id="deleteMaterialOrgByOrgId" parameterType="java.lang.Long">
		delete from material_org where org_id = #{orgId} ;
	</delete>
	
	

</mapper>