<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.BookDao">
	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="bookname != null and bookname !=''">
				bookname,
			</if>
			<if test="isbn != null and isbn !=''">
				isbn,
			</if>
			<if test="sn != null and sn !=''">
				sn,
			</if>
			<if test="vn != null and vn !=''">
				vn,
			</if>
			<if test="author != null and author !=''">
				author,
			</if>
			<if test="publisher != null and publisher !=''">
				publisher,
			</if>
			<if test="lang != null and lang !=''">
				lang,
			</if>
			<if test="revision != null">
				revision,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="publishDate != null ">
				publish_date,
			</if>
			<if test="reader != null and reader !=''">
				reader,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="score != null">
				score,
			</if>
			<if test="buyUrl != null and buyUrl !=''">
				buy_url,
			</if>
			<if test="imageUrl != null and imageUrl !=''">
				image_url,
			</if>
			<if test="pdfUrl != null and pdfUrl !=''">
				pdf_url,
			</if>
			<if test="clicks != null">
				clicks,
			</if>
			<if test="comments != null">
				comments,
			</if>
			<if test="likes != null">
				likes,
			</if>
			<if test="bookmarks != null">
				bookmarks,
			</if>
			<if test="isStick != null ">
				is_stick,
			</if>
			<if test="sort != null">
				sort,
			</if>
			<if test="deadlineStick != null">
				deadline_stick,
			</if>
			<if test="isNew != null">
				is_new,
			</if>
			<if test="sortNew != null">
				sort_new,
			</if>
			<if test="deadlineNew != null">
				deadline_new,
			</if>
			<if test="isPromote != null">
				is_promote,
			</if>
			<if test="sortPromote != null">
				sort_promote,
			</if>
			<if test="deadlinePromote != null">
				deadline_promote,
			</if>
			<if test="sales != null">
				sales,
			</if>
			<if test="isOnSale != null">
				is_on_sale,
			</if>
			<if test="gmtCreate != null">
				gmt_create,
			</if>
			<if test="gmtUpdate != null ">
				gmt_update,
			</if>
			<if test="isKey != null">
				is_key,
			</if>
			<if test="sortKey != null">
				sort_key,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="id != null">
				#{id},
			</if>
			<if test="bookname != null and bookname !=''">
				#{bookname},
			</if>
			<if test="isbn != null and isbn !=''">
				#{isbn},
			</if>
			<if test="sn != null and sn !=''">
				#{sn},
			</if>
			<if test="vn != null and vn !=''">
				#{vn},
			</if>
			<if test="author != null and author !=''">
				#{author},
			</if>
			<if test="publisher != null and publisher !=''">
				#{publisher},
			</if>
			<if test="lang != null and lang !=''">
				#{lang},
			</if>
			<if test="revision != null">
				#{revision},
			</if>
			<if test="type != null">
				#{type},
			</if>
			<if test="publishDate != null ">
				#{publishDate,jdbcType=TIMESTAMP},
			</if>
			<if test="reader != null and reader !=''">
				#{reader},
			</if>
			<if test="price != null">
				#{price},
			</if>
			<if test="score != null">
				#{score},
			</if>
			<if test="buyUrl != null and buyUrl !=''">
				#{buyUrl},
			</if>
			<if test="imageUrl != null and imageUrl !=''">
				#{imageUrl},
			</if>
			<if test="pdfUrl != null and pdfUrl !=''">
				#{pdfUrl},
			</if>
			<if test="clicks != null">
				#{clicks},
			</if>
			<if test="comments != null">
				#{comments},
			</if>
			<if test="likes != null">
				#{likes},
			</if>
			<if test="bookmarks != null">
				#{bookmarks},
			</if>
			<if test="isStick != null">
				#{isStick},
			</if>
			<if test="sort != null">
				#{sort},
			</if>
			<if test="deadlineStick != null ">
				#{deadlineStick},
			</if>
			<if test="isNew != null">
				#{isNew},
			</if>
			<if test="sortNew != null">
				#{sortNew},
			</if>
			<if test="deadlineNew != null">
				#{deadlineNew},
			</if>
			<if test="isPromote != null">
				#{isPromote},
			</if>
			<if test="sortPromote != null">
				#{sortPromote},
			</if>
			<if test="deadlinePromote != null">
				#{deadlinePromote},
			</if>
			<if test="sales != null">
				#{sales},
			</if>
			<if test="isOnSale != null">
				#{isOnSale},
			</if>
			<if test="gmtCreate != null">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate != null">
				#{gmtUpdate},
			</if>
			<if test="isKey != null">
				#{isKey},
			</if>
			<if test="sortKey != null">
				#{sortKey},
			</if>
		</trim>
	</sql>
	<!-- 新增Book -->
	<insert id="addBook" parameterType="Book">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		insert into book (
		<include refid="key" />
		)
		values(
		<include refid="value" />
		) ;
	</insert>

	<!-- 根据id删除一个 -->
	<delete id="deleteBookById" parameterType="java.lang.Long">
		delete from book where
		id=#{id} ;
	</delete>

	<!-- 更新Book -->
	<update id="updateBook" parameterType="Book">
		update book b
		<if test=" isStick != null ">
			,(select max(sort)+1 max_sort from book) max_sort
		</if>
		<if test=" isNew != null ">
			,(select max(sort_new)+1 max_sort_new from book) max_sort_new
		</if>
		<if test=" isPromote != null ">
			,(select max(sort_promote)+1 max_sort_promote from book) max_sort_promote
		</if>
		<if test=" isKey != null ">
			,(select max(sort_key)+1 max_sort_key from book) max_sort_key
		</if>
		<set>
			<if test="id != null and id !=''">
				b.id=#{id},
			</if>
			<if test="bookname != null and bookname !=''">
				b.bookname=#{bookname},
			</if>
			<if test=" isbn != null and isbn !=''">
				b.isbn=#{isbn},
			</if>
			<if test="sn != null and sn !=''">
				b.sn=#{sn},
			</if>
			<if test="author != null and author !=''">
				b.author=#{author},
			</if>
			<if test="publisher != null and publisher !=''">
				b.publisher=#{publisher},
			</if>
			<if test="lang != null and lang !=''">
				b.lang=#{lang},
			</if>
			<if test="revision != null and revision !=''">
				b.revision=#{revision},
			</if>
			<if test="type != null ">
				b.type=#{type},
			</if>
			<if test="publishDate != null ">
				b.publish_date=#{publishDate},
			</if>
			<if test="reader != null and reader !=''">
				b.reader=#{reader},
			</if>
			<if test=" price != null and price !=''">
				b.price=#{price},
			</if>
			<if test="score != null and score !=''">
				b.score=#{score},
			</if>
			<if test="buyUrl != null and buyUrl !=''">
				b.buy_url=#{buyUrl},
			</if>
			<if test=" imageUrl != null and imageUrl !=''">
				b.image_url =#{imageUrl},
			</if>
			<if test="pdfUrl != null and pdfUrl !=''">
				b.pdf_url=#{pdfUrl},
			</if>
			<if test="clicks != null and clicks !=''">
				b.clicks=#{clicks},
			</if>
			<if test=" comments != null and comments !=''">
				b.comments=#{comments},
			</if>
			<if test="likes != null and likes !=''">
				b.likes=#{likes},
			</if>
			<if test="bookmarks != null and bookmarks !=''">
				b.bookmarks=#{bookmarks},
			</if>
			<if test=" isStick != null ">
				b.is_stick=#{isStick},
				b.sort = max_sort.max_sort,
			</if>
			<!--<if test=" sort != null and sort !=''">
				b.sort=#{sort},
			</if>-->
			<if test="deadlineStick != null">
				b.deadline_stick=#{deadlineStick},
			</if>
			<if test="isNew != null ">
				b.is_new=#{isNew},
				b.sort_new=max_sort_new.max_sort_new,
			</if>
			<!--<if test=" sortNew != null and sortNew !=''">
				b.sort_new=#{sortNew},
			</if>-->
			<if test="deadlineNew != null ">
				b.deadline_new=#{deadlineNew},
			</if>
			<if test=" isPromote != null ">
				b.is_promote=#{isPromote},
				b.sort_promote=max_sort_promote.max_sort_promote,
			</if>
			<!--<if test="sortPromote != null and sortPromote !=''">
				b.sort_promote=#{sortPromote},
			</if>-->
			<if test="deadlinePromote != null ">
				b.deadline_promote=#{deadlinePromote},
			</if>
			<if test="isKey !=null">
				b.is_key = #{isKey},
				b.sort_key=max_sort_key.max_sort_key,
			</if>
			<!--<if test="sortKey !=null">
				b.sort_key = #{sortKey},
			</if>-->
			<if test=" sales != null and sales !=''">
				b.sales=#{sales},
			</if>
			<if test=" isOnSale != null ">
				b.is_on_sale=#{isOnSale},
			</if>
			<if test="materialId != null">
				b.material_id=#{materialId}
			</if>
		</set>
		where
		b.id=#{id} ;
	</update>

	<!-- 根据id查询一个Book -->
	<select id="getBookById" parameterType="java.lang.Long"
		resultType="Book">
		select * from book where id=#{id} ;
	</select>
	<!-- 根据id查询一个Book -->
	<select id="getBookSupport" parameterType="java.lang.Long"
		resultType="BookSupport">
		select * from book_support where book_id=#{bookId} AND
		support_id = #{supportId} ;
	</select>
	<!-- 根据bookname查询一个Book -->
	<select id="getBookByBookname" parameterType="java.lang.String"
		resultType="Book">
		select * from book where bookname=#{bookname} ;
	</select>
	<!-- 根据isbn查询一个Book -->
	<select id="getBookByIsbn" parameterType="java.lang.String"
		resultType="Book">
		select * from book where isbn=#{isbn} ;
	</select>
	
	<!-- 根据vn查询一个Book -->
	<select id="getBookByVn2" parameterType="java.lang.String" resultType="Book">
		select * from book where vn = #{vn} ;
	</select>
	
	<insert id="addBookSupport">
		insert into book_support (book_id,support_id) VALUES
		(#{id},#{bookId})
	</insert>

	<!-- 根据vn查询一个Book -->
	<select id="getBookByVn" resultType="String">
		select b.vn from
		book b left
		join
		book_detail d on d.book_id = b.id;
	</select>
	<!-- 根据vn查询一个Book -->
	<select id="getBookByBookVn" resultType="Book">
		select b.*,d.detail
		content from
		book b left
		join
		book_detail d on d.book_id = b.id where
		b.vn=#{vn};
	</select>
	<!-- 分页查询 -->
	<select id="listBookVO" parameterType="PageParameter"
		resultType="BookVO">
		SELECT
		b.id,
		b.bookname,
		b.isbn,
		b.sn,
		b.author,
		b.publisher,
		b.lang,
		b.revision,
		b.type,
		b.publish_date,
		b.reader,
		b.price,
		b.score,
		b.buy_url,
		b.image_url,
		b.pdf_url,
		b.clicks,
		b.comments,
		b.likes,
		b.bookmarks,
		b.is_stick,
		b.sort,
		b.deadline_stick,
		b.is_new,
		b.sort_new,
		b.deadline_new,
		b.is_promote,
		b.sort_promote,
		b.deadline_promote,
		b.sales,
		b.is_on_sale,
		b.gmt_create,
		b.gmt_update,
		b.vn,
		b.editor_id,
		b.is_key,
		b.sort_key,
		t.type_name,
		t.path,m.material_name,m.id materialId
		FROM
		book
		b
		LEFT JOIN
		material_type t ON t.id = b.type
		LEFT JOIN material m ON m.id
		=
		b.material_id WHERE 1 = 1
		<if test="parameter.name !=null and parameter.name !='' ">
			and (b.isbn like concat('%',#{parameter.name},'%') or
			b.bookname like
			concat('%',#{parameter.name},'%'))
		</if>
		<if test="parameter.path !=null and parameter.path != ''">
			and (t.path like concat(#{parameter.path},'%') or
			t.id=#{parameter.type})
		</if>
		<if test="parameter.isNew !=null ">
			and b.is_new =#{parameter.isNew}
		</if>
		<if test="parameter.isOnSale !=null ">
			and b.is_on_sale =#{parameter.isOnSale}
		</if>
		<if test="parameter.isPromote !=null ">
			and b.is_promote = #{parameter.isPromote}
		</if>
		LIMIT #{start},#{pageSize}
	</select>

	<!-- 分页查询 -->
	<select id="recommendlist" parameterType="PageParameter"
			resultType="BookVO">
		-- 当前和这本书相关的放最前面 每本书三个推荐，查询列表排除自己这本书
		SELECT
		*
		FROM
		(
		SELECT
		! ISNULL(bb1.id) AS ischeckteachbook,
		! ISNULL(bb2.id) AS ischeckxgcommend,
		! ISNULL(bb3.id) AS ischeckrwcommend,
		b.*
		FROM
		book b
		LEFT JOIN book_book_relationship bb1 ON b.id = bb1.related_book_id
		AND bb1.type = 1
		AND bb1.main_book_id = #{parameter.id}
		LEFT JOIN book_book_relationship bb2 ON b.id = bb2.related_book_id
		AND bb2.type = 2
		AND bb2.main_book_id = #{parameter.id}
		LEFT JOIN book_book_relationship bb3 ON b.id = bb3.related_book_id
		AND bb3.type = 3
		AND bb3.main_book_id = #{parameter.id}
		WHERE
		1 = 1
		AND b.id != #{parameter.id}
		<if test="parameter.name !=null and parameter.name !='' ">
			and (b.isbn like concat('%',#{parameter.name},'%') or
			b.bookname like
			concat('%',#{parameter.name},'%'))
		</if>
		GROUP BY
		b.id
		) t
		WHERE
		1 = 1
		<if test="parameter.ischeckteachbook !=null ">
		  and 	ischeckteachbook = #{parameter.ischeckteachbook}
		</if>
		<if test="parameter.ischeckxgcommend !=null ">
			and 	ischeckxgcommend = #{parameter.ischeckxgcommend}
		</if>
		<if test="parameter.ischeckrwcommend !=null ">
			and 	ischeckrwcommend = #{parameter.ischeckrwcommend}
		</if>
		ORDER BY
		t.ischeckteachbook DESC,
		t.ischeckxgcommend DESC,
		t.ischeckrwcommend DESC,
		t.gmt_create DESC
		LIMIT #{start},#{pageSize}
	</select>

	<!-- 分页查询 -->
	<select id="recommendTotal" parameterType="PageParameter"
			resultType="Integer">
		-- 当前和这本书相关的放最前面 每本书三个推荐，查询列表排除自己这本书
		SELECT
		count(*)
		FROM
		(
		SELECT
		! ISNULL(bb1.id) AS ischeckteachbook,
		! ISNULL(bb2.id) AS ischeckxgcommend,
		! ISNULL(bb3.id) AS ischeckrwcommend,
		b.*
		FROM
		book b
		LEFT JOIN book_book_relationship bb1 ON b.id = bb1.related_book_id
		AND bb1.type = 1
		AND bb1.main_book_id = #{parameter.id}
		LEFT JOIN book_book_relationship bb2 ON b.id = bb2.related_book_id
		AND bb2.type = 2
		AND bb2.main_book_id = #{parameter.id}
		LEFT JOIN book_book_relationship bb3 ON b.id = bb3.related_book_id
		AND bb3.type = 3
		AND bb3.main_book_id = #{parameter.id}
		WHERE
		1 = 1
		AND b.id != #{parameter.id}
		<if test="parameter.name !=null and parameter.name !='' ">
			and (b.isbn like concat('%',#{parameter.name},'%') or
			b.bookname like
			concat('%',#{parameter.name},'%'))
		</if>
		GROUP BY
		b.id
		) t
		WHERE
		1 = 1
		<if test="parameter.ischeckteachbook !=null ">
			and 	ischeckteachbook = #{parameter.ischeckteachbook}
		</if>
		<if test="parameter.ischeckxgcommend !=null ">
			and 	ischeckxgcommend = #{parameter.ischeckxgcommend}
		</if>
		<if test="parameter.ischeckrwcommend !=null ">
			and 	ischeckrwcommend = #{parameter.ischeckrwcommend}
		</if>
		ORDER BY
		t.ischeckteachbook DESC,
		t.ischeckxgcommend DESC,
		t.ischeckrwcommend DESC

	</select>
	<!-- 查询总数 -->
	<select id="getBookVOTotal" parameterType="PageParameter"
		resultType="Integer">
		SELECT count(*) FROM book b LEFT JOIN material_type t ON t.id =
		b.type
		LEFT JOIN material m ON m.id = b.material_id
		WHERE 1 = 1
		<if test="parameter.name !=null and parameter.name !='' ">
			and (b.isbn like concat('%',#{parameter.name},'%') or
			b.bookname like
			concat('%',#{parameter.name},'%'))
		</if>
		<if test="parameter.isNew !=null ">
			and b.is_new =#{parameter.isNew}
		</if>
		<if test="parameter.isOnSale !=null ">
			and b.is_on_sale =#{parameter.isOnSale}
		</if>
		<if test="parameter.isPromote !=null ">
			and b.is_promote = #{parameter.isPromote}
		</if>
		<if test="parameter.path !=null and parameter.path != ''">
			and (t.path like concat(#{parameter.path},'%') or
			t.id=#{parameter.type})
		</if>
	</select>

	<!-- 查询总数 -->
	<select id="getBookPreferenceAnalysisTotal" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		SELECT COUNT(*) FROM
		(SELECT
		b.*,(
		CASE
		WHEN t.count != '' THEN
		t.count
		ELSE
		0
		END
		) count,
		m.type_name
		FROM
		book b
		LEFT JOIN
		(SELECT b.id,COUNT(c.score) count FROM book b LEFT JOIN book_user_comment c
		ON b.id = c.book_id
		WHERE c.is_auth =TRUE
		AND c.is_deleted =FALSE
		AND c.is_hide = FALSE
		AND c.score >=6
		GROUP BY b.id) t ON t.id = b.id
		LEFT JOIN material_type m ON m.id = b.type
		WHERE
		1 = 1
		<if test="bookname != null and bookname != ''">
			AND (b.bookname LIKE CONCAT('%', #{bookname}, '%') OR
			b.isbn LIKE CONCAT('%', #{bookname}, '%'))
		</if>
		<if test="path !=null and path != ''">
			and (m.path like concat(#{path},'%') or
			m.id=#{type})
		</if>
		ORDER BY
		b.bookmarks DESC) t
	</select>
	<!--查询书籍是否存在关系-->
	<select id="recommendisExist" parameterType="map" resultType="boolean">
		SELECT
			CASE
		WHEN count(*) > 0 THEN
			TRUE
		ELSE
			FALSE
		END
		FROM
			book_book_relationship bb
		WHERE
			bb.main_book_id = #{currentBookId}
		AND bb.related_book_id = #{recommendBookId}
		AND bb.type = #{selectType}
	</select>

	<!--插入书籍关系-->
	<insert id="insertrecommend"  parameterType="map">
		INSERT INTO book_book_relationship (
					main_book_id,
					related_book_id,
					type
				)
				VALUES
					( #{currentBookId}, #{recommendBookId}, #{selectType})
	</insert>

	<!--删除书籍关系-->
	<delete id="deleterecommend"  parameterType="map">
			DELETE
				FROM
					book_book_relationship
				WHERE
					main_book_id = #{currentBookId}
				AND related_book_id = #{recommendBookId}
				AND type = #{selectType}
	</delete>

	<select id="getMaxSort" resultType="java.lang.Long">
		select max(sort) from book
	</select>

	<!-- 查询总数 -->
	<select id="getBookPreferenceAnalysis" resultType="BookPreferenceAnalysisVO">
		SELECT
		b.*,(
		CASE
		WHEN t.count != '' THEN
		t.count
		ELSE
		0
		END
		)
		count,
		m.type_name
		FROM
		book b
		LEFT JOIN
		(SELECT b.id,COUNT(c.score) count
		FROM book b LEFT JOIN book_user_comment c
		ON b.id = c.book_id
		WHERE
		c.is_auth =TRUE
		AND c.is_deleted =FALSE
		AND c.is_hide = FALSE
		AND c.score
		>=6
		GROUP BY b.id) t ON t.id = b.id
		LEFT JOIN material_type m ON m.id =
		b.type
		WHERE
		1 = 1
		<if test="bookname != null and bookname != ''">
			AND (b.bookname LIKE CONCAT('%', #{bookname}, '%') OR
			b.isbn LIKE CONCAT('%', #{bookname}, '%'))
		</if>
		<if test="path !=null and path != ''">
			and (m.path like concat(#{path},'%') or
			m.id=#{type})
		</if>
		ORDER BY
		b.bookmarks DESC
		limit #{start},#{pageSize}
	</select>

	<!-- 获取书籍总数 -->
	<select id="getListToatl" resultType="java.lang.Integer">
		select COUNT(id) from book where 1=1
		<if test="bookName != null ">
			and bookname like CONCAT('%',#{bookName},'%')
		</if>
	</select>

	<!-- 获取数据分页数据 -->
	<select id="geList" resultType="Book">
		select * from book where 1=1
		<if test="bookName != null ">
			and bookname like CONCAT('%',#{bookName},'%')
		</if>
		limit #{start},#{pageSize}
	</select>

	<!-- 更新评分 -->
	<update id="updateBookCore">
		update book set score = (
		select avg(score) from
		book_user_comment where is_auth = 1 and !is_deleted
		and book_id = #{id}
		GROUP BY book_id
		)
		where id = #{id}
	</update>
	<!-- 更新评分 -->
	<update id="updateUpComments">
		update book set comments = comments+1 where id =
		#{id}
	</update>
	<!-- 更新评分 -->
	<update id="updateDownComments">
		update book set comments = comments-1 where id =
		#{id}
	</update>
	<!-- 获取所有书籍的id -->
	<select id="listBookId" resultType="Long">
		select id from book;
	</select>
	<!-- 批量删除书籍 -->
	<select id="deleted">
		delete from book 
	</select>
	<!-- 批量删除配套图书 -->
	<select id="deletedBookSupport">
		delete from book_support
	</select>

	<select id="queryTscxReadList" parameterType="PageParameter" resultType="Book">
		SELECT b.* FROM book AS b
		inner JOIN material_type AS t ON b.type = t.id
		and SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(t.path,'-',t.id),'-',
		(select cast(
		(CHAR_LENGTH(path)-CHAR_LENGTH(REPLACE(path,'-','')))/CHAR_LENGTH('-')+2
		as decimal(9,2)
		)
		from material_type where id = cast('${parameter.type}' as decimal(9,2)))),'-',-1) = '${parameter.type}'
		where b.is_on_sale = 1
		<if test="parameter.name != null and parameter.name != ''">
		  and  (b.bookname like concat('%',#{parameter.name},'%')or b.isbn like concat('%',#{parameter.name},'%') )
		</if>
		ORDER BY b.sales DESC LIMIT #{start},#{pageSize}

	</select>

	<select id="queryTscxReadListCount" parameterType="map" resultType="int">
		SELECT count(b.id) FROM book AS b
									inner JOIN material_type AS t ON b.type = t.id
				and SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(t.path,'-',t.id),'-',
													(select cast(
																			(CHAR_LENGTH(path)-CHAR_LENGTH(REPLACE(path,'-','')))/CHAR_LENGTH('-')+2
																as decimal(9,2)
																)
													 from material_type where id = cast('${parameter.type}' as decimal(9,2)))),'-',-1) = '${parameter.type}'
		where b.is_on_sale = 1
		<if test="parameter.name != null and parameter.name != ''">
			and  (b.bookname like concat('%',#{parameter.name},'%')or b.isbn like concat('%',#{parameter.name},'%') )
		</if>
		ORDER BY b.sales DESC
	</select>

	<update id="updateBookSellWell" parameterType="list">
		<foreach collection="list" item="item" index="index" open="" close="" separator=";">
			update book
			<set>
					is_sell_well=#{item.isSellWell},
					sort_sell_well=#{item.sortSellWell},

			</set>
			where id = ${item.id}
		</foreach>

	</update>
		<update id="updateBookSellWellByid" parameterType="java.lang.Long">
			update book
			<set>
				is_sell_well=null,
				sort_sell_well=null,
			</set>
			where id = ${id}
	</update>


	<select id="querySellwelList" parameterType="PageParameter" resultType="Book">
		SELECT b.* FROM book AS b
		inner JOIN material_type AS t ON b.type = t.id
		and SUBSTRING_INDEX(SUBSTRING_INDEX(CONCAT(t.path,'-',t.id),'-',
		(select cast(
		(CHAR_LENGTH(path)-CHAR_LENGTH(REPLACE(path,'-','')))/CHAR_LENGTH('-')+2
		as decimal(9,2)
		)
		from material_type where id = cast('${parameter.type}' as decimal(9,2)))),'-',-1) = '${parameter.type}'
		<if test="parameter.flage==1">
		where b.is_on_sale = 1 and b.is_sell_well=1
		</if>
		<if test="parameter.flage==1">
			where b.is_on_sale = 1 and b.is_sell_well=1
		</if>
		<if test="parameter.flage==1">
			where b.is_on_sale = 1 and b.is_sell_well=1
		</if>
		ORDER BY b.sort_sell_well  LIMIT #{start},#{pageSize}
	</select>


</mapper>