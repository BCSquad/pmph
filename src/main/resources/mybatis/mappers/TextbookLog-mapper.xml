<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.TextbookLogDao">

	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="textbookId != null">
				textbook_id,
			</if>
			<if test="updaterId != null  ">
				updater_id,
			</if>
			<if test="isPmphUpdater != null ">
				is_pmph_updater,
			</if>
			<if test="detail != null">
				detail,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="textbookId != null">
				#{textbookId},
			</if>
			<if test="updaterId != null  ">
				#{updaterId},
			</if>
			<if test="isPmphUpdater != null ">
				#{isPmphUpdater},
			</if>
			<if test="detail != null">
				#{detail},
			</if>
		</trim>
	</sql>

	<!-- 新增Textbook -->
	<insert id="addTextbookLog" parameterType="TextbookLog">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id"> <!-- order="AFTER"表示先执行插入语句，之后再执行查询语句 BEFORE 或 AFTER -->
			SELECT LAST_INSERT_ID()
		</selectKey>
		<!-- sql片段对应字段名,id属性值任意 -->
		INSERT INTO textbook_log
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>
	
	<!-- 根据书籍id和更新者分页查询日志总数 -->
	<select id="listTotalTextbookLogByTextBookId" parameterType="PageParameter" resultType="java.lang.Integer">
		SELECT 
			count(a.id)
		FROM
			textbook_log  a
		LEFT JOIN
			 pmph_user  b ON b.id = a.updater_id 
		LEFT JOIN
			 writer_user  c ON c.id = a.updater_id  
		where 
			a.textbook_id = #{parameter.textbookId} 
			<if test="parameter != null and parameter.updaterName != null ">
				and IF(a.is_pmph_updater,b.realname like CONCAT('%',#{parameter.updaterName},'%'),c.realname like CONCAT('%',#{parameter.updaterName},'%')) 
			</if>
	</select>
	
	<!-- 根据书籍id和更新者分页查询日志  -->
	<select id="listTextbookLogByTextBookId" parameterType="PageParameter" resultType="TextbookLog">
		SELECT 
			a.id,a.textbook_id,a.updater_id,a.is_pmph_updater,
			CONCAT('[',IF(a.is_pmph_updater,b.realname,c.realname),']',' 于 [{gmt_create}];',a.detail) detail,
			a.gmt_create
		FROM
			textbook_log  a
		LEFT JOIN 
			pmph_user  b ON b.id = a.updater_id 
		LEFT JOIN 
			writer_user  c ON c.id = a.updater_id  
		where 
			a.textbook_id = #{parameter.textbookId} 
			<if test="parameter != null and parameter.updaterName != null ">
				and IF(a.is_pmph_updater,b.realname like CONCAT('%',#{parameter.updaterName},'%'),c.realname like CONCAT('%',#{parameter.updaterName},'%')) 
			</if>
		ORDER BY 
			a.gmt_create desc,a.id asc 
		LIMIT #{start},#{pageSize}
	</select>

</mapper>
