<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bc.pmpheep.back.dao.PmphUserDao">
	<sql id="key">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="username!=null and username != '' ">
				username,
			</if>
			<if test="password!=null and password != '' ">
				password,
			</if>
			<if test="isDisabled!=null ">
				is_disabled,
			</if>
			<if test="realname!=null and realname != '' ">
				realname,
			</if>
			<if test="departmentId!=null ">
				department_id,
			</if>
			<if test="handphone!=null and handphone != '' ">
				handphone,
			</if>
			<if test="email!=null and email != '' ">
				email,
			</if>
			<if test="avatar!=null and avatar != '' ">
				avatar,
			</if>
			<if test="note!=null and note != '' ">
				note,
			</if>
			<if test="sort!=null ">
				sort,
			</if>
			<if test="isDeleted!=null">
				is_deleted,
			</if>
			<if test="gmtCreate!=null">
				gmt_create,
			</if>
			<if test="gmtUpdate!=null">
				gmt_update,
			</if>
		</trim>
	</sql>
	<!-- sql片段对应?,id属性值任意 -->
	<sql id="value">
		<!-- 去掉最后一个, -->
		<trim suffixOverrides=",">
			<if test="username!=null and username != ''">
				#{username},
			</if>
			<if test="password!=null and password != ''">
				#{password},
			</if>
			<if test="isDisabled!=null">
				#{isDisabled},
			</if>
			<if test="realname!=null and realname != ''">
				#{realname},
			</if>
			<if test="departmentId!=null ">
				#{departmentId},
			</if>
			<if test="handphone!=null and handphone != ''">
				#{handphone},
			</if>
			<if test="email!=null and email != ''">
				#{email},
			</if>
			<if test="avatar!=null and avatar != ''">
				#{avatar},
			</if>
			<if test="note!=null and note != ''">
				#{note},
			</if>
			<if test="sort!=null ">
				#{sort},
			</if>
			<if test="isDeleted!=null">
				#{isDeleted},
			</if>
			<if test="gmtCreate!=null">
				#{gmtCreate},
			</if>
			<if test="gmtUpdate!=null">
				#{gmtUpdate},
			</if>
		</trim>
	</sql>
	<insert id="add" parameterType="PmphUser" useGeneratedKeys="true"
		keyProperty="id">
		<!-- sql片段对应字段名,id属性值任意 -->
		INSERT INTO pmph_user
		(
		<include refid="key" />
		)
		VALUES
		(
		<include refid="value" />
		);
	</insert>

	<!-- 动态更新对象的写法 -->
	<update id="update" parameterType="PmphUser">
		UPDATE pmph_user
		<set>
			<if test="username != null and username!=''">
				username = #{username},
			</if>
			<if test="password != null and password!='' ">
				`password` = #{password},
			</if>
			<if test=" isDisabled!= null ">
				is_disabled= #{isDisabled},
			</if>
			<if test=" realname!= null and realname !=''">
				realname= #{realname},
			</if>
			<if test=" departmentId!= null and departmentId !=''">
				department_id = #{departmentId},
			</if>
			<if test=" handphone!= null and handphone !=''">
				handphone = #{handphone},
			</if>
			<if test=" email!= null and email !=''">
				email= #{email},
			</if>
			<if test="avatar!=null and avatar != ''">
				avatar = #{avatar},
			</if>
			<if test=" note!= null and  note!=''">
				note = #{note},
			</if>
			<if test=" sort!= null and  sort!=''">
				sort = #{sort},
			</if>
			<if test=" isDeleted!= null ">
				is_deleted= #{isDeleted}
			</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<delete id="delete" parameterType="Long">
		DELETE FROM
		pmph_user
		where
		id =
		#{id}
	</delete>

	<!-- 批量删除 -->
	<delete id="batchDelete" parameterType="list">
		DELETE FROM
		pmph_user
		where
		id
		in
		<foreach collection="ids" item="id" open="(" close=")"
			separator=",">
			#{id}
		</foreach>
	</delete>

	<select id="get" parameterType="Long" resultType="PmphUser">
		SELECT
		username,
		is_disabled,
		realname,
		department_id,
		handphone,
		email,
		note,
		sort,
		avatar,
		is_deleted
		FROM
		pmph_user
		WHERE
		id = #{id}
	</select>

	<select id="getListUser" resultType="PmphUser">
		SELECT
		username,
		is_disabled,
		realname,
		department_id,
		handphone,
		email,
		note,
		sort,
		is_deleted
		FROM
		pmph_user
		where
		is_disabled=0
	</select>

	<select id="getListByUsernameAndRealname" resultType="PmphUser"
		parameterType="map">
		SELECT
		*
		FROM
		pmph_user
		<if test=" name!= null and name !=''">
			WHERE
			username LIKE CONCAT(CONCAT('%',#{name},'%'))
			AND
			realname LIKE CONCAT(CONCAT('%',#{name},'%'))
		</if>
		LIMIT #{start},#{size}
	</select>

	<select id="getByUsernameAndPassword" resultType="PmphUser"
		parameterType="map">
		SELECT
		id,
		username,
		is_disabled,
		realname,
		department_id,
		note,
		avatar,
		is_deleted
		FROM
		pmph_user
		WHERE
		1=1
		<if test=" username!= null and username !=''">
			and username = #{username}
		</if>
		<if test=" password!= null and password !=''">
			and password = #{password}
		</if>
	</select>

	<select id="getListByRole" parameterType="Long" resultType="PmphUser">
		SELECT
		tu.id,
		tu.username,
		tu.`password`,
		tu.realname,
		tu.`is_disabled`
		FROM
		pmph_user tu
		LEFT JOIN
		pmph_user_role tur ON tu.id = tur.user_id
		LEFT JOIN
		pmph_role tr ON tur.role_id = tr.id
		WHERE
		tr.id =#{rid}
	</select>

	<!-- 根据用户 id 查询这个用户拥有的所有资源（这里的资源就代表权限） -->
	<select id="getListAllResources" resultType="PmphPermission"
		parameterType="Long">
		SELECT
		tr.`id`,
		tr.`parent_id`,
		tr.`path`,
		tr.`permission_name`,
		tr.menu_name,
		tr.url
		FROM
		`pmph_permission` tr
		LEFT
		JOIN
		`pmph_role_permission` trr
		ON
		tr.`id` = trr.`permission_id`
		LEFT JOIN
		`pmph_user_role` tur
		ON
		trr.`role_id` = tur.role_id
		WHERE
		tur.user_id =
		#{uid}
	</select>

	<!-- 根据用户 id 查询用户所具有的角色字符串表示 -->
	<select id="getListRoleSnByUser" parameterType="Long"
		resultType="String">
		SELECT
		tr.role_name
		FROM
		`pmph_role` tr
		LEFT JOIN
		`pmph_user_role` tur
		ON
		tr.`id` = tur.role_id
		LEFT JOIN
		`pmph_user` tu
		ON
		tur.`user_id` = tu.id
		WHERE
		tu.`id` = #{uid}
	</select>

	<!-- 根据用户 id 查询用户所具有的角色对象表示 -->
	<select id="getListUserRole" parameterType="Long" resultType="PmphRole">
		SELECT
		tr.`id`,
		tr.`role_name`
		FROM
		`pmph_role` tr
		LEFT JOIN
		`pmph_user_role` tur
		ON
		tr.`id` = tur.role_id
		LEFT JOIN
		`pmph_user` tu
		ON
		tur.`user_id` = tu.id
		WHERE
		tu.`id` = #{uid}
	</select>

	<!-- 查询表单的数据总数 -->
	<select id="getPmphUserCount" resultType="Long">
		select
		count(*)
		from
		pmph_user
	</select>

	<select id="getListPmphUserTotal" parameterType="PageParameter"
		resultType="int">
		SELECT
		count(*)
		FROM
		(SELECT
		u.*,d.dp_name departmentName,d.path
		FROM
		pmph_user u
		LEFT JOIN
		pmph_department d
		ON
		u.department_id = d.id
		WHERE
		1 =
		1
		<if test="parameter.name !=null and parameter.name !='' ">
			and (u.username like concat('%',#{parameter.name},'%') or
			u.realname like
			concat('%',#{parameter.name},'%'))
		</if>
		<if
			test="parameter.path !=null and parameter.path !='' and parameter.departmentId !=null">
			and (d.path like concat(#{parameter.path},'%') or
			d.id=#{parameter.departmentId})
		</if>
		) t
	</select>

	<select id="getListPmphUser" parameterType="PageParameter"
		resultType="PmphUserManagerVO">
		SELECT
		u.*,d.dp_name departmentName,d.path
		FROM
		pmph_user u
		LEFT JOIN
		pmph_department d
		ON
		u.department_id = d.id
		WHERE
		1 = 1
		<if test="parameter.name !=null and parameter.name !='' ">
			and (u.username like concat('%',#{parameter.name},'%') or
			u.realname like
			concat('%',#{parameter.name},'%'))
		</if>
		<if
			test="parameter.path !=null and parameter.path !='' and parameter.departmentId != null">
			and (d.path like concat(#{parameter.path},'%') or
			d.id=#{parameter.departmentId})
		</if>
		LIMIT #{start},#{pageSize}
	</select>
	<!-- 根据用户id获取用户对应的权限 -->
	<select id="getPmphUserPermissionByUserId" parameterType="Long"
		resultType="Long">
		SELECT
		prp.`permission_id`
		FROM
		`pmph_user` pu
		LEFT JOIN
		`pmph_user_role` pur
		ON
		pu.`id` = pur.`user_id`
		LEFT JOIN
		`pmph_role_permission` prp
		ON
		pur.`role_id` = prp.`role_id`
		WHERE
		pu.`id`
		= #{userId}
	</select>

	<select id="getMaterialPermissionByUserId" parameterType="Long"
		resultType="Integer">
		SELECT m.permission FROM pmph_user u LEFT JOIN
		pmph_user_role r ON u.id = r.user_id
		LEFT JOIN pmph_role_material m ON
		m.role_id = r.id WHERE u.id = #{userId}

	</select>

	<!-- 动态更新对象的写法 -->
	<update id="updatePmphUserOfBack" parameterType="PmphUserManagerVO">
		UPDATE pmph_user
		<set>
			<if test="username != null and username!=''">
				username = #{username},
			</if>
			<if test=" isDisabled!= null ">
				is_disabled= #{isDisabled},
			</if>
			<if test=" realname!= null and realname !=''">
				realname= #{realname},
			</if>
			<if test=" departmentId!= null and departmentId !=''">
				department_id = #{departmentId},
			</if>
			<if test=" handphone!= null and handphone !=''">
				handphone = #{handphone},
			</if>
			<if test=" email!= null and email !=''">
				email= #{email},
			</if>
			<if test=" note!= null and  note!=''">
				note = #{note},
			</if>
			<if test=" sort!= null and  sort!=''">
				sort = #{sort},
			</if>
		</set>
		WHERE
		id = #{id}
	</update>

	<select id="getPmphUserByDepartmentId" parameterType="PageParameter"
		resultType="PmphUser">
		SELECT
		*
		FROM
		pmph_user u
		where
		u.department_id =
		#{departmentId}
	</select>
</mapper>
